{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexi\\\\OneDrive\\\\Desktop\\\\React\\\\HotnCold\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport React from \"react\";\nimport BasicForm from \"./form-logic\";\nimport TopNavigation from \"./navigation\";\nimport Footer from \"./footer\";\nimport HelpWindow from \"./help-window\";\nimport GuessResult from './guess-result';\nimport GuessesList from './guesses-list';\nimport GuessedNumberCount from './guessed-numbers-count';\nimport GuessNumberForm from './guess-number-form'; // useState and useEffect?\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AppElements extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TopNavigation, {\n        onClickNewGame: () => this.onSubmitRestart(),\n        onClickShowRules: () => this.setShowGameRules(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showGameRules: false,\n      currentGuess: '',\n      previousGames: {},\n      guessedCorrectly: false,\n      previousGuesses: [],\n      guessResultOutcomes: {\n        start: 'Make a Guess',\n        gameWon: 'You are on Fire',\n        hot: 'very Warm!',\n        warmer: 'that is closer...or farther...',\n        cold: 'brrrr...cold!'\n      },\n      correctAnswer: this.generateNumberToGuess(this.props.minNumber, this.props.maxNumber)\n    };\n  }\n\n  setShowGameRules(showGameRules) {\n    this.setState({\n      showGameRules\n    });\n  }\n\n  setGuessedCorrectly(guessedCorrectly) {\n    this.setState({\n      guessedCorrectly\n    });\n  }\n\n  setGuessedNumbers(guessedNumbers) {\n    this.setState({\n      guessedNumbers\n    });\n  }\n\n  setGuessMessageText(guessMessageText) {\n    this.setState({\n      guessMessageText\n    });\n  }\n\n  setSecretNumber(secretNumber) {\n    this.setState({\n      secretNumber\n    });\n  }\n\n  onSubmitGuessedNumber(guessedNumber) {\n    console.log('Submit Test | Guessed Number:', this.state.secretNumber);\n    const guessMessageText = this.hotOrCold(this.state.secretNumber, guessedNumber);\n    const guessedCorrectly = this.state.secretNumber === guessedNumber;\n    const guessedNumbers = [...this.state.guessedNumbers, guessedNumber];\n    this.setState({\n      guessMessageText,\n      guessedCorrectly,\n      guessedNumbers\n    });\n  }\n\n  generateNumberToGuess(min, max) {\n    return Math.floor(Math.random() * max) + min;\n  }\n\n  onSubmitRestart() {\n    this.setGuessedNumbers([]);\n    this.setGuessResultText(this.state.guessResultTextTemplates.start);\n    this.setGuessedCorrectly(false);\n    this.setNumberToGuess(this.generateNumberToGuess(this.props.minNumber, this.props.maxNumber));\n  }\n\n  hotOrCold(secretNumber, guess) {\n    if (secretNumber === guess) {\n      return this.state.guessResultOutcomes.gameWon;\n    }\n\n    const abs = Math.abs(secretNumber - guess);\n\n    if (abs > 10) {\n      return this.state.guessResultOutcomes.cold;\n    }\n\n    if (abs <= 10 && abs >= 5) {\n      return this.state.guessResultOutcomes.warmer;\n    }\n\n    if (abs < 5) {\n      return this.state.guessResultOutcomes.hot;\n    }\n  }\n\n  render() {\n    const {\n      minNumber,\n      maxNumber\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(AppElements, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BasicForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GuessResult, {\n        guessResultText: this.state.guessResultText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GuessNumberForm, {\n        disableInputField: this.state.guessedCorrectly,\n        onSubmit: number => this.state.guessedCorrectly ? this.onSubmitRestart() : this.onSubmitGuessedNumber(number),\n        min: minNumber,\n        max: maxNumber,\n        btnLabel: this.state.guessedCorrectly ? 'Restart Game!' : 'Guess'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GuessedNumberCount, {\n        count: this.state.guessedNumbers.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Explanation of Hot or Cold In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GuessedNumbersList, {\n        numbers: this.state.guessedNumbers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Previous Guesses: \", this.state.previousGuesses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nApp.defaultProps = {\n  minNumber: 1,\n  maxNumber: 100\n};","map":{"version":3,"sources":["C:/Users/alexi/OneDrive/Desktop/React/HotnCold/src/App.js"],"names":["React","BasicForm","TopNavigation","Footer","HelpWindow","GuessResult","GuessesList","GuessedNumberCount","GuessNumberForm","AppElements","Component","render","onSubmitRestart","setShowGameRules","App","constructor","props","state","showGameRules","currentGuess","previousGames","guessedCorrectly","previousGuesses","guessResultOutcomes","start","gameWon","hot","warmer","cold","correctAnswer","generateNumberToGuess","minNumber","maxNumber","setState","setGuessedCorrectly","setGuessedNumbers","guessedNumbers","setGuessMessageText","guessMessageText","setSecretNumber","secretNumber","onSubmitGuessedNumber","guessedNumber","console","log","hotOrCold","min","max","Math","floor","random","setGuessResultText","guessResultTextTemplates","setNumberToGuess","guess","abs","guessResultText","number","length","defaultProps"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport BasicForm from \"./form-logic\";\nimport TopNavigation from \"./navigation\";\nimport Footer from \"./footer\";\nimport HelpWindow from \"./help-window\";\nimport GuessResult from './guess-result';\nimport GuessesList from './guesses-list';\nimport GuessedNumberCount from './guessed-numbers-count';\nimport GuessNumberForm from './guess-number-form';\n\n// useState and useEffect?\nclass AppElements extends React.Component {\n  render() {\n    return (\n      <>\n        <TopNavigation onClickNewGame={() => this.onSubmitRestart()} onClickShowRules={() => this.setShowGameRules(true)} />\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showGameRules: false,\n      currentGuess: '',\n      previousGames: {},\n      guessedCorrectly: false,\n      previousGuesses: [],\n      guessResultOutcomes: {\n        start: 'Make a Guess',\n        gameWon: 'You are on Fire',\n        hot: 'very Warm!',\n        warmer: 'that is closer...or farther...',\n        cold: 'brrrr...cold!'\n      },\n      correctAnswer: this.generateNumberToGuess(this.props.minNumber, this.props.maxNumber)\n  };\n} \n\n  setShowGameRules(showGameRules ){\n    this.setState ({showGameRules});\n  }\n  setGuessedCorrectly(guessedCorrectly) {\n    this.setState({guessedCorrectly});\n  }\n  setGuessedNumbers(guessedNumbers) {\n    this.setState({guessedNumbers});\n  }\n  setGuessMessageText(guessMessageText) {\n    this.setState({guessMessageText});\n  }\n  setSecretNumber(secretNumber) {\n    this.setState({secretNumber});\n  }\n\n  onSubmitGuessedNumber(guessedNumber) {\n    console.log('Submit Test | Guessed Number:', this.state.secretNumber);\n    const guessMessageText = this.hotOrCold(this.state.secretNumber, guessedNumber);\n    const guessedCorrectly = this.state.secretNumber === guessedNumber;\n    const guessedNumbers = [...this.state.guessedNumbers, guessedNumber];\n    this.setState({\n      guessMessageText,\n      guessedCorrectly,\n      guessedNumbers\n    });\n  }\n\n  generateNumberToGuess(min, max) {\n    return Math.floor(Math.random() * max) + min;\n  }\n\n  onSubmitRestart() {\n    this.setGuessedNumbers([]);\n    this.setGuessResultText(this.state.guessResultTextTemplates.start);\n    this.setGuessedCorrectly(false);\n    this.setNumberToGuess(this.generateNumberToGuess(this.props.minNumber, this.props.maxNumber));\n  }\n\n  hotOrCold(secretNumber, guess) {\n    if (secretNumber === guess) {\n      return this.state.guessResultOutcomes.gameWon;\n    }\n    const abs = Math.abs(secretNumber - guess);\n    if (abs > 10) {\n      return this.state.guessResultOutcomes.cold;\n    }\n    if (abs <= 10 && abs >= 5) {\n      return this.state.guessResultOutcomes.warmer;\n    }\n    if (abs < 5) {\n      return this.state.guessResultOutcomes.hot;\n    }\n  }\n\n  render() {\n    const {minNumber, maxNumber} = this.props;\n    return (\n      <div className=\"App\">\n        <AppElements />\n        <BasicForm />\n        <GuessResult guessResultText={this.state.guessResultText} />\n          <GuessNumberForm\n            disableInputField={this.state.guessedCorrectly}\n            onSubmit={number => this.state.guessedCorrectly ? this.onSubmitRestart() : this.onSubmitGuessedNumber(number)}\n            min={minNumber}\n            max={maxNumber}\n            btnLabel={this.state.guessedCorrectly ? 'Restart Game!' : 'Guess'}\n          />\n          <GuessedNumberCount count={this.state.guessedNumbers.length} />\n        <p>Explanation of Hot or Cold In Progress</p>\n        <GuessedNumbersList numbers={this.state.guessedNumbers} />\n        <p>Your Previous Guesses: {this.state.previousGuesses}</p>\n      </div>\n    );\n  }\n}\n\nApp.defaultProps = {\n  minNumber: 1,\n  maxNumber: 100\n};"]},"metadata":{},"sourceType":"module"}