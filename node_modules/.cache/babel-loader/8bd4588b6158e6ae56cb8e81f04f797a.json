{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexi\\\\OneDrive\\\\Desktop\\\\React\\\\HotnCold\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport React from \"react\";\nimport BasicForm from \"./form-logic\";\nimport TopNavigation from \"./navigation\";\nimport Footer from \"./footer\";\nimport HelpWindow from \"./help-window\";\nimport GuessResult from './guess-result';\nimport GuessedNumbersCount from './guess-count'; // useState and useEffect?\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AppElements extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showGameRules: false,\n      currentGuess: '',\n      previousGames: {},\n      guessedCorrectly: false,\n      previousGuesses: [],\n      guessResultOutcomes: {\n        start: 'Make a Guess',\n        gameWon: 'You are on Fire',\n        hot: 'very Warm!',\n        warmer: 'that is closer...or farther...',\n        cold: 'cold!'\n      },\n      secretNumber: this.generateNumberToGuess(this.props.minNumber, this.props.maxNumber)\n    };\n  }\n\n  setShowGameRules(showGameRules) {\n    this.setState({\n      showGameRules\n    });\n  }\n\n  setGuessedCorrectly(guessedCorrectly) {\n    this.setState({\n      guessedCorrectly\n    });\n  }\n\n  setPreviousGuesses(previousGuesses) {\n    this.setState({\n      previousGuesses\n    });\n  }\n\n  setGuessResultOutcomes(guessResultOutcomes) {\n    this.setState({\n      guessResultOutcomes\n    });\n  }\n\n  setSecretNumber(secretNumber) {\n    this.setState({\n      secretNumber\n    });\n  }\n\n  onSubmitGuessedNumber(guessedNumber) {\n    console.log('Submitted | Guessed Number:', guessedNumber);\n    const showText = this.hotOrCold(this.state.secretNumber, guessedNumber);\n    const guessedCorrectly = this.state.secretNumber === guessedNumber; // const previousGuesses = [this.state.previousGuesses, guessedNumber];\n\n    const currentGuess = this.state.currentGuess; // const listLength = this.state.guessedNumbers.length()\n\n    console.log(\"The Number to Guess is:\", this.state.secretNumber);\n    this.setState({\n      showText,\n      guessedCorrectly,\n      currentGuess // previousGuesses\n\n    });\n  }\n\n  generateNumberToGuess(min, max) {\n    return Math.floor(Math.random() * max) + min;\n  }\n\n  onSubmitRestart() {\n    this.setGuessedNumbers([]);\n    this.setGuessResultText(this.state.guessResultTextTemplates.start);\n    this.setGuessedCorrectly(false);\n    this.setNumberToGuess(this.generateNumberToGuess(this.props.minNumber, this.props.maxNumber));\n  }\n\n  hotOrCold(secretNumber, guess) {\n    if (secretNumber === guess) {\n      return this.state.guessResultOutcomes.gameWon;\n    }\n\n    const howFar = Math.abs(secretNumber - guess);\n\n    if (howFar > 10) {\n      return this.state.guessResultOutcomes.cold;\n    }\n\n    if (howFar <= 10 && howFar >= 5) {\n      return this.state.guessResultOutcomes.warmer;\n    }\n\n    if (howFar < 5) {\n      return this.state.guessResultOutcomes.hot;\n    }\n  }\n\n  render() {\n    const {\n      minNumber,\n      maxNumber\n    } = this.props;\n\n    /*#__PURE__*/\n    _jsxDEV(TopNavigation, {\n      onClickNewGame: () => this.onSubmitRestart(),\n      onClickShowRules: () => setShowGameRules()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this);\n\n    console.log(\"These are the previous guesses\", this.state.previousGuesses);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(AppElements, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GuessResult, {\n        guessResultText: this.hotOrCold.showText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BasicForm, {\n        disableInputField: this.state.guessedCorrectly,\n        onSubmit: number => this.state.guessedCorrectly ? this.onSubmitRestart() : this.onSubmitGuessedNumber(number),\n        min: minNumber,\n        max: maxNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Your Previous Guesses \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 36\n        }, this), \" \", this.state.previousGuesses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nApp.defaultProps = {\n  minNumber: 1,\n  maxNumber: 100\n};","map":{"version":3,"sources":["C:/Users/alexi/OneDrive/Desktop/React/HotnCold/src/App.js"],"names":["React","BasicForm","TopNavigation","Footer","HelpWindow","GuessResult","GuessedNumbersCount","AppElements","Component","render","App","constructor","props","state","showGameRules","currentGuess","previousGames","guessedCorrectly","previousGuesses","guessResultOutcomes","start","gameWon","hot","warmer","cold","secretNumber","generateNumberToGuess","minNumber","maxNumber","setShowGameRules","setState","setGuessedCorrectly","setPreviousGuesses","setGuessResultOutcomes","setSecretNumber","onSubmitGuessedNumber","guessedNumber","console","log","showText","hotOrCold","min","max","Math","floor","random","onSubmitRestart","setGuessedNumbers","setGuessResultText","guessResultTextTemplates","setNumberToGuess","guess","howFar","abs","number","defaultProps"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport BasicForm from \"./form-logic\";\nimport TopNavigation from \"./navigation\";\nimport Footer from \"./footer\";\nimport HelpWindow from \"./help-window\";\nimport GuessResult from './guess-result';\nimport GuessedNumbersCount from './guess-count';\n\n// useState and useEffect?\nclass AppElements extends React.Component {\n  render() {\n    return (\n      <>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showGameRules: false,\n      currentGuess: '',\n      previousGames: {},\n      guessedCorrectly: false,\n      previousGuesses: [],\n      guessResultOutcomes: {\n        start: 'Make a Guess',\n        gameWon: 'You are on Fire',\n        hot: 'very Warm!',\n        warmer: 'that is closer...or farther...',\n        cold: 'cold!'\n      },\n      secretNumber: this.generateNumberToGuess(this.props.minNumber, this.props.maxNumber)\n  };\n} \n  setShowGameRules(showGameRules ){\n    this.setState ({showGameRules});\n  }\n  setGuessedCorrectly(guessedCorrectly) {\n    this.setState({guessedCorrectly});\n  }\n  setPreviousGuesses(previousGuesses) {\n    this.setState({previousGuesses});\n  }\n  setGuessResultOutcomes(guessResultOutcomes) {\n    this.setState({guessResultOutcomes});\n  }\n  setSecretNumber(secretNumber) {\n    this.setState({secretNumber});\n  }\n\n  onSubmitGuessedNumber(guessedNumber) {\n    console.log('Submitted | Guessed Number:', guessedNumber);\n    const showText = this.hotOrCold(this.state.secretNumber, guessedNumber);\n    const guessedCorrectly = this.state.secretNumber === guessedNumber;\n    // const previousGuesses = [this.state.previousGuesses, guessedNumber];\n    const currentGuess = this.state.currentGuess\n    // const listLength = this.state.guessedNumbers.length()\n    console.log(\"The Number to Guess is:\", this.state.secretNumber)\n    this.setState({\n      showText,\n      guessedCorrectly,\n      currentGuess\n      // previousGuesses\n    });\n  }\n\n  generateNumberToGuess(min, max) {\n    return Math.floor(Math.random() * max) + min;\n  }\n\n  onSubmitRestart() {\n    this.setGuessedNumbers([]);\n    this.setGuessResultText(this.state.guessResultTextTemplates.start);\n    this.setGuessedCorrectly(false);\n    this.setNumberToGuess(this.generateNumberToGuess(this.props.minNumber, this.props.maxNumber));\n  }\n\n  hotOrCold(secretNumber, guess) {\n    if (secretNumber === guess) {\n      return this.state.guessResultOutcomes.gameWon;\n    }\n    const howFar = Math.abs(secretNumber - guess);\n    if (howFar > 10) {\n      return this.state.guessResultOutcomes.cold;\n    }\n    if (howFar <= 10 && howFar >= 5) {\n      return this.state.guessResultOutcomes.warmer;\n    }\n    if (howFar < 5) {\n      return this.state.guessResultOutcomes.hot;\n    }\n  }\n\n  render() {\n    const {minNumber, maxNumber} = this.props;\n    <TopNavigation onClickNewGame={() => this.onSubmitRestart()} onClickShowRules={() => setShowGameRules()} />\n\n    console.log(\"These are the previous guesses\", this.state.previousGuesses);\n    return (\n      <div className=\"App\">\n        <AppElements />\n        {/* <BasicForm /> */}\n        <GuessResult guessResultText={this.hotOrCold.showText} />\n          <BasicForm\n            disableInputField={this.state.guessedCorrectly}\n            onSubmit={number => this.state.guessedCorrectly ? this.onSubmitRestart() : this.onSubmitGuessedNumber(number)}\n            min={minNumber}\n            max={maxNumber}\n          />\n        <p>Your Progress</p>\n        {/* <GuessedNumbersCount count= /> */}\n        <div>Your Previous Guesses <br></br> {this.state.previousGuesses}</div>\n      </div>\n    );\n  }\n}\n\nApp.defaultProps = {\n  minNumber: 1,\n  maxNumber: 100\n};"]},"metadata":{},"sourceType":"module"}